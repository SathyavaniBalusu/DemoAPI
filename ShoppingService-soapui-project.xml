<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="1407d90c-6801-49f0-ac3d-0de4909ad104" activeEnvironment="Default" name="ShoppingService" resourceRoot="" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="873c93f5-cd48-42ff-9c4e-2d49b6507443" wsaVersion="NONE" name="ShoppingServiceSoapBinding" type="wsdl" bindingName="{http://expertz.me/service/eCommerce/ShoppingService/1.0}ShoppingServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="file:/C:/Users/Sathya/Downloads/Resources/ShoppingService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:\C:\Users\Sathya\Downloads\Resources\ShoppingService.wsdl"><con:part><con:url>file:\C:\Users\Sathya\Downloads\Resources\ShoppingService.wsdl</con:url><con:content><![CDATA[<definitions name="ShoppingService" targetNamespace="http://expertz.me/service/eCommerce/ShoppingService/1.0" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:sdt="http://expertz.me/data/eCommerce/ShoppingService/1.0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ss="http://expertz.me/service/eCommerce/ShoppingService/1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <types>
    <xsd:schema>
      <xsd:import namespace="http://expertz.me/data/eCommerce/ShoppingService/1.0" schemaLocation="ShoppingService.xsd"/>
    </xsd:schema>
  </types>
  <message name="loginRequest">
    <part name="loginRequest" element="sdt:loginRequest"/>
  </message>
  <message name="loginResponse">
    <part name="sessionId" element="sdt:sessionId"/>
  </message>
  <message name="login_faultMsg">
    <part name="loginFault" element="sdt:faultMessage"/>
  </message>
  <message name="findRequest">
    <part name="findRequest" element="sdt:findRequest"/>
  </message>
  <message name="findResponse">
    <part name="findResponse" element="sdt:findResponse"/>
  </message>
  <message name="find_faultMsg">
    <part name="findFault" element="sdt:faultMessage"/>
  </message>
  <message name="purchaseRequest">
    <part name="purchaseRequest" element="sdt:purchaseRequest"/>
  </message>
  <message name="purchaseResponse">
    <part name="purchaseResponse" element="sdt:purchaseResponse"/>
  </message>
  <message name="purchase_faultMsg">
    <part name="purchaseFault" element="sdt:faultMessage"/>
  </message>
  <message name="logoutRequest">
    <part name="logoutRequest" element="sdt:logoutRequest"/>
  </message>
  <message name="logoutResponse">
    <part name="logoutResponse" element="sdt:logoutResponse"/>
  </message>
  <message name="logout_faultMsg">
    <part name="logoutFault" element="sdt:faultMessage"/>
  </message>
  <portType name="ShoppingServicePt">
    <operation name="login">
      <input message="ss:loginRequest"/>
      <output message="ss:loginResponse"/>
      <fault name="fault" message="ss:login_faultMsg"/>
    </operation>
    <operation name="logout">
      <input message="ss:logoutRequest"/>
      <output message="ss:logoutResponse"/>
      <fault name="fault" message="ss:logout_faultMsg"/>
    </operation>
    <operation name="find">
      <input message="ss:findRequest"/>
      <output message="ss:findResponse"/>
      <fault name="fault" message="ss:find_faultMsg"/>
    </operation>
    <operation name="purchase">
      <input message="ss:purchaseRequest"/>
      <output message="ss:purchaseResponse"/>
      <fault name="fault" message="ss:purchase_faultMsg"/>
    </operation>
  </portType>
  <binding name="ShoppingServiceSoapBinding" type="ss:ShoppingServicePt">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="login">
      <soap:operation soapAction="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </fault>
    </operation>
    <operation name="logout">
      <soap:operation soapAction="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="find">
      <soap:operation soapAction="http://expertz.me/service/eCommerce/ShoppingService/1.0/find"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="purchase">
      <soap:operation soapAction="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="ShoppingService">
    <port name="ShoppingServicePort" binding="ss:ShoppingServiceSoapBinding">
      <soap:address location="http://localhost:8088/mockShoppingService"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\C:\Users\Sathya\Downloads\Resources\ShoppingService.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://expertz.me/data/eCommerce/ShoppingService/1.0" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:smsg="http://expertz.me/data/eCommerce/ShoppingService/1.0">
  <xsd:element name="faultMessage" type="xsd:string"/>
  <xsd:complexType name="FaultMessage">
    <xsd:sequence>
      <xsd:element name="errorCode" type="xsd:string"/>
      <xsd:element name="errorDesc" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="sessionId" type="smsg:SessionId"/>
  <xsd:simpleType name="SessionId">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="PurchaseItem">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:element name="purchaseRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sessionId" type="smsg:SessionId"/>
        <xsd:element name="purchaseItem" type="smsg:PurchaseItem"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="loginRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="username" type="xsd:string"/>
        <xsd:element name="password" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="logoutRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sessionId" type="smsg:SessionId"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="logoutResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="logoutMessage" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="findRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="sessionId" type="xsd:string"/>
        <xsd:element name="findString" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="findResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="item" type="smsg:ItemType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="ItemType">
    <xsd:sequence>
      <xsd:element name="id" type="xsd:string"/>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="price" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="purchaseResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="purchaseStatus" type="smsg:PurchaseStatusType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="PurchaseStatusType">
    <xsd:sequence>
      <xsd:element name="id" type="xsd:string"/>
      <xsd:element name="stockStatus" type="xsd:string"/>
      <xsd:element name="expectedDelivery" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:endpoint>http://localhost:8088/mockShoppingService</con:endpoint></con:endpoints><con:operation id="e97d0702-c322-492c-85b0-36863ecc1a74" isOneWay="false" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find" name="find" bindingOperationName="find" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0d826bdd-c71f-495f-8f99-dfe08241d237" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockShoppingService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:findRequest>\r
         <ns:sessionId>?</ns:sessionId>\r
         <ns:findString>?</ns:findString>\r
      </ns:findRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="7732896a-193c-4ecf-aa2d-1c13cd0d95b4" isOneWay="false" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login" name="login" bindingOperationName="login" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ac7fda28-6af3-4f6b-8f3d-32284b1b3388" name="Fault Login"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:loginRequest>\r
         <ns:username>?</ns:username>\r
         <ns:password>Sathya</ns:password>\r
      </ns:loginRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/><con:wsrmConfig version="1.2"/></con:call><con:call id="09abd55a-0c01-4c2b-8abd-8db64f6427bc" name="Successful Login"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:loginRequest>\r
         <ns:username>djfhdfk</ns:username>\r
         <ns:password>Sathya</ns:password>\r
      </ns:loginRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="4d3ebd28-91fd-456e-b80a-dd414ecb3233" isOneWay="false" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout" name="logout" bindingOperationName="logout" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dca1b11d-cc9d-4e14-803d-5ce26bc6daad" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockShoppingService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:logoutRequest>\r
         <ns:sessionId>?</ns:sessionId>\r
      </ns:logoutRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/></con:call></con:operation><con:operation id="49f756b1-d857-4e0c-8d1c-dda9bb16f3cc" isOneWay="false" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase" name="purchase" bindingOperationName="purchase" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="94fcb817-4bf3-4180-889b-9bff068a3d22" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockShoppingService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:purchaseRequest>\r
         <ns:sessionId>?</ns:sessionId>\r
         <ns:purchaseItem>?</ns:purchaseItem>\r
      </ns:purchaseRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:testSuite id="b0d1eb0b-b00e-4856-a6e6-dce88c5f0ced" name="ShoppingServiceSoapBinding TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="cc79bcde-63ab-4f3f-879c-bc15d3a0d804" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="find TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="060d0504-7de9-486a-9e12-7b3b8d043b11" name="find"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>find</con:operation><con:request name="find" id="a9414c9f-f1e6-45d4-9daf-aa55e4b30339"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:findRequest>\r
         <ns:sessionId>?</ns:sessionId>\r
         <ns:findString>?</ns:findString>\r
      </ns:findRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="91ad0511-3eb6-405f-8587-c1cb7ec23f22" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="login TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="3b8dbf91-a7f1-4aec-88cf-0024464f8f35" name="login"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login" id="f8d3e6aa-53ae-4808-9980-ab8ef808452d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:loginRequest>\r
         <ns:username>?</ns:username>\r
         <ns:password>?</ns:password>\r
      </ns:loginRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="95dd7408-1649-490e-8bf5-479b364bac72" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="logout TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="ec0eddf1-c76e-498f-8556-867e4c3db431" name="logout"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="logout" id="96f84467-2f46-4418-88bb-c380e4302050"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:logoutRequest>\r
         <ns:sessionId>?</ns:sessionId>\r
      </ns:logoutRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e29dea45-5410-490f-b299-9ca12d9a839f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="purchase TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="e5c73f19-0968-445e-84ab-acdadab9f82d" name="purchase"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>purchase</con:operation><con:request name="purchase" id="59623052-959c-4e39-b0fa-a3edecc2c086"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ns:purchaseRequest>\r
         <ns:sessionId>?</ns:sessionId>\r
         <ns:purchaseItem>?</ns:purchaseItem>\r
      </ns:purchaseRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="e85a4d96-d274-483d-98eb-8af0ff30778f" name="Functional testing"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="1a578a58-bb33-47a6-a646-7b7a972110dd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Traditional Login and Logout" searchProperties="true"><con:settings/><con:testStep type="properties" name="Username and password" id="5bc7e49f-b1eb-4287-aec9-b5217cc01a0f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>sathya</con:value></con:property><con:property><con:name>password</con:name><con:value>Welcome1</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="User name and property transfer" id="83e53fcc-6166-4728-90aa-d0fe7ef5a346"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>username</con:sourceType><con:sourceStep>Username and password</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Call Login Service</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';

//*:username</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>password</con:name><con:sourceType>password</con:sourceType><con:sourceStep>Username and password</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Call Login Service</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';


//*:password</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Call Login Service" id="26842e09-2668-4375-a314-c343ed71bfe6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="Call Login Service" id="fa9ce584-e1ec-4897-88fa-74b7e29ec365"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:loginRequest>
         <ns:username>sathya</ns:username>
         <ns:password>Welcome1</ns:password>
      </ns:loginRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ba2ca0b1-43e7-48b3-80ca-97a1c74aed71"/><con:assertion type="Schema Compliance" id="e5d51e9b-653c-44b5-bfb5-ff13da2d3fe0"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="66b475e3-85a8-4803-80ee-7df27651a812"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="Item" id="3863dda5-f6f9-418b-96ed-dc0b0c38ba9a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>item</con:name><con:value>Android Tablet</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="SessionID and Item" id="813a9cc3-557a-4c6c-a236-c1f829e925ab"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Call Login Service</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';

//*:sessionId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Find</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';

//*:sessionId</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Item</con:name><con:sourceType>item</con:sourceType><con:sourceStep>Item</con:sourceStep><con:sourcePath>
</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Find</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';

//*:findString</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Find" id="624ecba6-fb2c-46be-a4a0-816ce04315a5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>find</con:operation><con:request name="Find" id="d949ffd3-0297-4eca-b775-2ef7f4179bbb"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:findRequest>
         <ns:sessionId>3640390107711394</ns:sessionId>
         <ns:findString>Android Tablet</ns:findString>
      </ns:findRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5f050a97-d116-4363-8fb9-88286fa7f190"/><con:assertion type="Schema Compliance" id="313cc1a4-fe68-4df1-8cb4-8b7ff61be4fb"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="1b277ca7-4ee2-4ca1-b1f2-2a2aef416408"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="SessionID and Item transfer" id="413a14a9-d367-4ce9-9118-bb500e083f32"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SessionID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Call Login Service</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';

//*:sessionId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>purchase</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';

//*:sessionId</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Item</con:name><con:sourceType>item</con:sourceType><con:sourceStep>Item</con:sourceStep><con:sourcePath/><con:targetType>Request</con:targetType><con:targetStep>purchase</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';

//*:purchaseItem</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="purchase" id="c4b34abe-2f6b-4953-8c0b-2b6b383b00e6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>purchase</con:operation><con:request name="purchase" id="d7407bd0-2dc8-4b17-8ac5-86b7ada9cf51"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:purchaseRequest>
         <ns:sessionId>3640390107711394</ns:sessionId>
         <ns:purchaseItem>Android Tablet</ns:purchaseItem>
      </ns:purchaseRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5192251d-61b0-4d80-ba20-333f4ebb99fc"/><con:assertion type="Schema Compliance" id="60a01b73-253a-43cf-8dd2-0f50944813c4"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="5e318eca-61e6-4af8-b1db-aa383cf7969e"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="SessionID Transfer" id="5770612f-742a-4918-8619-ea7b7e54761e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SessionID Transfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Call Login Service</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';

//*:sessionId
</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Call Logout Service</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace ns2='http://expertz.me/service/eCommerce/ShoppingService/1.0';

//*:sessionId</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Call Logout Service" id="83dfb226-de69-488b-a183-324c8cf08d60"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="Call Logout Service" id="c6b3d161-adff-4d2b-8265-7a37e7a65aee"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:logoutRequest>
         <ns:sessionId>3640390107711394</ns:sessionId>
      </ns:logoutRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="709d6d15-36db-4a40-b281-2d2bcbf51584"/><con:assertion type="Schema Compliance" id="b3c59686-c123-4245-bc1f-f3650b102c67"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="41d9e387-7d54-4221-b2a4-1fae4bcb15f8"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="57bc3e9d-bee2-462e-b8b8-3df19e6d38e4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Property expansion" searchProperties="true"><con:settings/><con:testStep type="properties" name="Username and password" id="83f66148-6af1-4b59-8415-8df80421090c"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>sathya</con:value></con:property><con:property><con:name>password</con:name><con:value>Welcome1</con:value></con:property><con:property><con:name>item</con:name><con:value>Android Tablet</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="Call Login Service" id="67c0473e-4fc9-492f-ac69-79c0c43b9767"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="Call Login Service" id="fa9ce584-e1ec-4897-88fa-74b7e29ec365"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:loginRequest>
         <ns:username>${Username and password#username}</ns:username>
         <ns:password>${Username and password#password}</ns:password>
      </ns:loginRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ba2ca0b1-43e7-48b3-80ca-97a1c74aed71"/><con:assertion type="Schema Compliance" id="e5d51e9b-653c-44b5-bfb5-ff13da2d3fe0"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="66b475e3-85a8-4803-80ee-7df27651a812"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Find" id="775735ee-fda6-4c4e-aa5f-535a14450b9b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>find</con:operation><con:request name="Find" id="d949ffd3-0297-4eca-b775-2ef7f4179bbb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:findRequest>
         <ns:sessionId>${Call Login Service#Response#//*:sessionId}</ns:sessionId>
         <ns:findString>${Username and password#item}</ns:findString>
      </ns:findRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5f050a97-d116-4363-8fb9-88286fa7f190"/><con:assertion type="Schema Compliance" id="313cc1a4-fe68-4df1-8cb4-8b7ff61be4fb"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="1b277ca7-4ee2-4ca1-b1f2-2a2aef416408"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="purchase" id="393889eb-5ddf-4ffe-b4ea-57a6aa6d722c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>purchase</con:operation><con:request name="purchase" id="d7407bd0-2dc8-4b17-8ac5-86b7ada9cf51"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:purchaseRequest>
         <ns:sessionId>${Call Login Service#Response#//*:sessionId}</ns:sessionId>
         <ns:purchaseItem>${Find#Request#//*:findString}</ns:purchaseItem>
      </ns:purchaseRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5192251d-61b0-4d80-ba20-333f4ebb99fc"/><con:assertion type="Schema Compliance" id="60a01b73-253a-43cf-8dd2-0f50944813c4"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="5e318eca-61e6-4af8-b1db-aa383cf7969e"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Call Logout Service" id="cfe6ce7c-d4c2-4eb0-8794-6d6ba4de2bae"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="Call Logout Service" id="c6b3d161-adff-4d2b-8265-7a37e7a65aee"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:logoutRequest>
         <ns:sessionId>${Call Login Service#Response#//*:sessionId}</ns:sessionId>
      </ns:logoutRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="709d6d15-36db-4a40-b281-2d2bcbf51584"/><con:assertion type="Schema Compliance" id="b3c59686-c123-4245-bc1f-f3650b102c67"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="41d9e387-7d54-4221-b2a4-1fae4bcb15f8"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5586212a-ea9b-4e19-b9ba-8fae8a15e465" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Login and Logout script" searchProperties="true"><con:settings/><con:testStep type="properties" name="Username and password" id="ad3af73d-2453-4566-b8ce-7a362222cb51"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>sathya</con:value></con:property><con:property><con:name>password</con:name><con:value>Welcome1</con:value></con:property><con:property><con:name>item</con:name><con:value>Android Tablet</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="Call Login Service" id="4d8d8b1e-bc3a-43ff-968f-0fc2bbba8ac9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="Call Login Service" id="fa9ce584-e1ec-4897-88fa-74b7e29ec365"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:loginRequest>
         <ns:username>${Username and password#username}</ns:username>
         <ns:password>${Username and password#password}</ns:password>
      </ns:loginRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ba2ca0b1-43e7-48b3-80ca-97a1c74aed71"/><con:assertion type="Schema Compliance" id="e5d51e9b-653c-44b5-bfb5-ff13da2d3fe0"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="66b475e3-85a8-4803-80ee-7df27651a812"/><con:assertion type="GroovyScriptAssertion" id="0dcc5a1a-6e36-41b8-83ec-1ee79780c763" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
//you can use this in Groovy script also
def response =context.testCase.getTestStepByName('Call Login Service').getPropertyValue("response")
def Holder = new XmlHolder(response)
def Session = Holder.getNodeValue("//*:sessionId")
context.testCase.setPropertyValue("LogoutRequest",Session)</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="caae7958-48d8-4f7e-9835-f955913f28c9"><con:configuration/></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Call Logout Service" id="0a3c34e8-74eb-4dfa-a1ba-91b8044fef87"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="Call Logout Service" id="c6b3d161-adff-4d2b-8265-7a37e7a65aee"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:logoutRequest>
         <ns:sessionId>${#TestCase#LogoutRequest}</ns:sessionId>
      </ns:logoutRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="709d6d15-36db-4a40-b281-2d2bcbf51584"/><con:assertion type="Schema Compliance" id="b3c59686-c123-4245-bc1f-f3650b102c67"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="41d9e387-7d54-4221-b2a4-1fae4bcb15f8"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="c3e929df-ebfb-4984-9ae1-d866e1b2c8a2"><con:settings/><con:config><script>def response = context.expand('${Call Login Service#response#//*:sessionId}')
log.info ("$response")</script></con:config></con:testStep><con:properties><con:property><con:name>LogoutRequest</con:name><con:value>443363201085725</con:value></con:property></con:properties></con:testCase><con:testCase id="c07b8c9c-de8f-47fc-987a-39c4f366ba94" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PurchaseOrNotToPurchase" searchProperties="true"><con:settings/><con:testStep type="properties" name="Username and password" id="a1a11807-133b-4630-9404-8e7f7f9fbabf"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>Harry potter</con:value></con:property><con:property><con:name>password</con:name><con:value>welcome2</con:value></con:property><con:property><con:name>item</con:name><con:value>Android Tablet</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="Call Login Service" id="60b4452c-dbb5-45d4-9eac-9b8aed80c21e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="Call Login Service" id="fa9ce584-e1ec-4897-88fa-74b7e29ec365"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:loginRequest>
         <ns:username>Sathya</ns:username>
         <ns:password>Welcome1</ns:password>
      </ns:loginRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ba2ca0b1-43e7-48b3-80ca-97a1c74aed71"/><con:assertion type="Schema Compliance" id="e5d51e9b-653c-44b5-bfb5-ff13da2d3fe0"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="66b475e3-85a8-4803-80ee-7df27651a812"/><con:assertion type="GroovyScriptAssertion" id="0dcc5a1a-6e36-41b8-83ec-1ee79780c763" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
//you can use this in Groovy script also
def response =context.testCase.getTestStepByName('Call Login Service').getPropertyValue("response")
def Holder = new XmlHolder(response)
def Session = Holder.getNodeValue("//*:sessionId")
context.testCase.setPropertyValue("LogoutRequest",Session)</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ae3aa5d7-8db9-4380-bd36-208e23d47896"><con:configuration/></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="443f5714-b651-4fe3-995a-b2bc1fcba7b7"><con:settings/><con:config><script>// Get the username by property expansion
def username = context.expand( '${Call Login Service#Request#//ns:username}' )

// Print the username just so we can debug it
log.info "User is $username"

// If user is not ExpertzMe, the next step to execute should be logout service
if(username != "sathya"){
	log.info "Not a previleged user - No purchase for you!!!"
	testRunner.gotoStepByName("Call Logout Service")
}
else{
// Execute the next step as normal
log.info "Proceed to purchase"
}</script></con:config></con:testStep><con:testStep type="request" name="purchase" id="6c04df71-408e-4e67-9fb4-a92743dc3450"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>purchase</con:operation><con:request name="purchase" id="d7407bd0-2dc8-4b17-8ac5-86b7ada9cf51"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:purchaseRequest>
         <ns:sessionId>${Call Login Service#Response#//*:sessionId}</ns:sessionId>
         <ns:purchaseItem>${Username and password#item}</ns:purchaseItem>
      </ns:purchaseRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5192251d-61b0-4d80-ba20-333f4ebb99fc"/><con:assertion type="Schema Compliance" id="60a01b73-253a-43cf-8dd2-0f50944813c4"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="5e318eca-61e6-4af8-b1db-aa383cf7969e"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Call Logout Service" id="620e5496-a4fd-41a4-a63b-b575c5fda498"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="Call Logout Service" id="c6b3d161-adff-4d2b-8265-7a37e7a65aee"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:logoutRequest>
         <ns:sessionId>${#TestCase#LogoutRequest}</ns:sessionId>
      </ns:logoutRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="709d6d15-36db-4a40-b281-2d2bcbf51584"/><con:assertion type="Schema Compliance" id="b3c59686-c123-4245-bc1f-f3650b102c67"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="41d9e387-7d54-4221-b2a4-1fae4bcb15f8"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>LogoutRequest</con:name><con:value>17639319695592748</con:value></con:property></con:properties></con:testCase><con:testCase id="bd40c41e-f9e0-4398-b117-91517e26950e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="System Test" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="c3cb68b3-3493-4ac5-bee6-f0c202d1a7ce"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
// i am trying to fetch the request of call Login service modify and send it back to the service
// you can use context only within testcase if your outside you cannot use context
def request = testRunner.testCase.testSuite.project.testSuites["Functional testing"].testCases["PurchaseOrNotToPurchase"].getTestStepByName("Call Login Service").getPropertyValue("request")
def holder = new XmlHolder(request)
def un = holder.getNodeValue("//*:username")
log.info "$un"
//i am passing sathya value to username 
def updateun = holder.setNodeValue("//*:username","Sathya")
//i am also 
def updatepwd = holder.setNodeValue("//*:password","Welcome1")
// if you want to update 
//i am updating my old xml with new xml with values
def newxml = holder.getXml()
testRunner.testCase.testSuite.project.testSuites["Functional testing"].testCases["PurchaseOrNotToPurchase"].getTestStepByName("Call Login Service").setPropertyValue("request",newxml)
def tc = testRunner.testCase.testSuite.project.testSuites["Functional testing"].testCases["PurchaseOrNotToPurchase"]
// ia m running the whole test case synchronously
def runner = tc.run(null, false)
log.info {$runner.status}
log.info runner.results.size()
log.info "$runner.timeTaken"
</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="83828fae-278a-473a-a3d7-106f32220a1c" name="System Test"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="9d1b1ff9-734f-4533-ad47-9c06cbd8f364" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="System test" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="e8e1b447-e1c9-4465-b424-8ef34612272e" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
// i am trying to fetch the request of call Login service modify and send it back to the service
// you can use context only within testcase if your outside you cannot use context
def request = testRunner.testCase.testSuite.project.testSuites["Functional testing"].testCases["PurchaseOrNotToPurchase"].getTestStepByName("Call Login Service").getPropertyValue("request")
def holder = new XmlHolder(request)
def un = holder.getNodeValue("//*:username")
log.info "$un"
//i am passing sathya value to username 
def updateun = holder.setNodeValue("//*:username","Sathya")
//i am also 
def updatepwd = holder.setNodeValue("//*:password","Welcome1")
// if you want to update 
//i am updating my old xml with new xml with values
def newxml = holder.getXml()
testRunner.testCase.testSuite.project.testSuites["Functional testing"].testCases["PurchaseOrNotToPurchase"].getTestStepByName("Call Login Service").setPropertyValue("request",newxml)
def tc = testRunner.testCase.testSuite.project.testSuites["Functional testing"].testCases["PurchaseOrNotToPurchase"]
// ia m running the whole test case synchronously
def runner = tc.run(null, false)
log.info {$runner.status}
log.info runner.results.size()
log.info "$runner.timeTaken"
assert runner.results.size()==5</script></con:config></con:testStep><con:testStep type="groovy" name="System test" id="c0ea92a3-62c7-4e99-ac9a-de67c3912592"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.model.testsuite.TestRunner.Status
//def testrunner = testRunner.testCase.testSuite.project.testSuites["Functional testing"].testCases["System Test"]
//
//def result = testRunner.runTestStepByName("System test")
def tc = testRunner.testCase.testSuite.project.testSuites["Functional testing"].testCases["System Test"].getTestStepByName("Groovy Script")
//
// this is running a particular step
def result = tc.run(testRunner,context)
def status = result.getStatus().toString()

if(status =="OK")
{
    log.info "Test Passed"
}
else
{
    log.info "Test Failed"
}
 
log.info "testcaseName got executed" +testRunner.runContext.currentStep.name 
//def tc = testRunner.testCase.testSuite.project.testSuites["Functional testing"].testCases["System Test"]
//def runner = tc.run(null,false)
//log.info "$runner.status"
//log.info runner.results.size()
//log.info "$runner.timeTaken"</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="2930d6e8-68f2-4ad6-85bf-07b8a31cdcb2" name="DataDrivenTesting"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e70d3541-ce27-4b1d-868b-39b9752b16a3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DataDrivenTesting using jxl" searchProperties="true"><con:settings/><con:testStep type="groovy" name="DataDriven" id="282c7b55-5674-4d25-abe7-9b7e146287c7"><con:settings/><con:config><script>import jxl.*

def username
def password
 //fetching the Excel from its path
def filepath = "C:/Users/Sathya/Desktop/DataSheet.xls"

File Excel = new File(filepath)
Workbook wb = Workbook.getWorkbook(Excel)
//fetch the sheet inside workbook
Sheet sh = wb.getSheet("Sheet1")
//fetch the rows and columns
def row = sh.getRows().toInteger()
def col = sh.getColumns().toInteger()
log.info "number of rows are $row and numbe rof columns $col"

for (def i=1; i&lt;row; i++){
	for(def j=0; j&lt;col; j++){
		if(j==0){
			username=sh.getCell(j,i).getContents()
		}
		else{
			password=sh.getCell(j,i).getContents()
		}
		
	}
	def tc= testRunner.testCase.testSuite.project.testSuites["Functional testing"].testCases["PurchaseOrNotToPurchase"]
	tc.testSteps["Username and password"].setPropertyValue("username",username)
	tc.testSteps["Username and password"].setPropertyValue("password",password)
	def runner = tc.run(null,false)
	}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d61111e0-15aa-4244-b7c8-a25af5e39a31" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DataBase" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="JDBC Request" id="6b98aa74-7441-42d6-a9c1-3b4fcfc1ce07"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.mysql.jdbc.Driver</con:driver><con:connectionString>jdbc:mysql://localhost:3306/batch4?user=root&amp;password=root</con:connectionString><con:query>select * from login</con:query><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="18d24264-60a6-4b4f-b573-832360a1e3cf"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
def response = context.testCase.getTestStepByName("JDBC Request").getPropertyValue("responseAsxml")
def holder = new XmlHolder(response)
def tc= testRunner.testCase.testSuite.project.testSuites["Functional testing"].testCases["PurchaseOrNotToPurchase"]
for(def i=1;i&lt;=3;i++)
{
def name = holder.getNodeValue("//ResultSet/Row["+i+"]/LOGIN.USERNAME")
log.info "$name"
testRunner.testCase.testSteps["Username and Password"].setPropertyValue("username"+i,name)
def password = holder.getNodeValue("//ResultSet/Row["+i+"]/LOGIN.PASSWORD")
log.info "$password"
testRunner.testCase.testSteps["Username and Password"].setPropertyValue("password"+i,password)
}
</script></con:config></con:testStep><con:testStep type="properties" name="Username and Password" id="05a7019b-fabd-44d9-9cc1-147af9eecd32"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username1</con:name><con:value>sathya</con:value></con:property><con:property><con:name>password1</con:name><con:value>welcome1</con:value></con:property><con:property><con:name>username2</con:name><con:value>HarryPotter</con:value></con:property><con:property><con:name>password2</con:name><con:value>welcome2</con:value></con:property><con:property><con:name>username3</con:name><con:value>Chris</con:value></con:property><con:property><con:name>password3</con:name><con:value>welcome3</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="Call Login Service" id="94dcfa4c-f747-4962-996d-99eb5006b4d8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="Call Login Service" id="fa9ce584-e1ec-4897-88fa-74b7e29ec365"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:loginRequest>
         <ns:username>${Username and Password#username1}</ns:username>
         <ns:password>${Username and Password#password1}</ns:password>
      </ns:loginRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ba2ca0b1-43e7-48b3-80ca-97a1c74aed71"/><con:assertion type="Schema Compliance" id="e5d51e9b-653c-44b5-bfb5-ff13da2d3fe0"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="66b475e3-85a8-4803-80ee-7df27651a812"/><con:assertion type="GroovyScriptAssertion" id="0dcc5a1a-6e36-41b8-83ec-1ee79780c763" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
//you can use this in Groovy script also
def response =context.testCase.getTestStepByName('Call Login Service').getPropertyValue("response")
def Holder = new XmlHolder(response)
def Session = Holder.getNodeValue("//*:sessionId")
context.testCase.setPropertyValue("LogoutRequest",Session)</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="caae7958-48d8-4f7e-9835-f955913f28c9"><con:configuration/></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Call Logout Service" id="1d607c18-925d-4225-b052-c34c4154d53e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ShoppingServiceSoapBinding</con:interface><con:operation>logout</con:operation><con:request name="Call Logout Service" id="c6b3d161-adff-4d2b-8265-7a37e7a65aee"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://DESKTOP-F0LMT67:8088/mockShoppingServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:logoutRequest>
         <ns:sessionId>${#TestCase#LogoutRequest}</ns:sessionId>
      </ns:logoutRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="709d6d15-36db-4a40-b281-2d2bcbf51584"/><con:assertion type="Schema Compliance" id="b3c59686-c123-4245-bc1f-f3650b102c67"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="41d9e387-7d54-4221-b2a4-1fae4bcb15f8"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>LogoutRequest</con:name><con:value>8851181920413135</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:mockService id="41ce03a0-a18a-4ab9-9a0f-2cd2b8fe591c" port="8088" path="/mockShoppingServiceSoapBinding" host="DESKTOP-F0LMT67" name="ShoppingServiceSoapBinding MockService"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:properties/><con:mockOperation name="find" id="a1005e46-cf77-4833-914e-37be4f8b4b5c" interface="ShoppingServiceSoapBinding" operation="find"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="8496ccf5-204d-4db2-8e67-df6ac81f3823" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:findResponse>
         <ns:item>
            <ns:id>?</ns:id>
            <ns:description>?</ns:description>
            <ns:price>?</ns:price>
         </ns:item>
      </ns:findResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="login" id="863d03e1-4786-4969-9f43-87a127180637" interface="ShoppingServiceSoapBinding" operation="login"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>// Initialize Util classes to retrieve XML value
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( mockRequest.requestContent )

// Get the username and Password values provided
def username = holder.getNodeValue( "//*:username" )
def password = holder.getNodeValue( "//*:password" )

// validate by checking that the User is not already logged in
// Username is of required length and Password doesn't end with 123!!!
if( context.hasProperty( username )  || username.length() > 10 || username.length() &lt; 3 || password.endsWith( "123" )){
	// If user is already loggged in, set different fault codes compared to others
	if(context.hasProperty( username )){
		requestContext.faultCode = 'APP001'
		requestContext.faultShortDesc = 'Already Logged In'
		requestContext.faultCausedBy = 'Auth System'
		requestContext.faultDesc = 'User is already logged in. If you want to login as another user logout first'
	}
	else{
		// Set relevant error code and desc. For the demo, we will keep it simple
		requestContext.faultCode = 'APP002'
		requestContext.faultShortDesc = 'Invalid Login Credentials'
		requestContext.faultCausedBy = 'Auth System'
		requestContext.faultDesc = 'Invalid Login Credentials. Please try again.'
	}
	// Specify which response to send back
	return "Fault Login"	
}

// Seems like a valid request, so generate session ID
// Note that we don't do password verification in the demo
def sessionid = String.valueOf( Math.random() ).substring( 2 )

// Set the user name and session ID as valid sessions and logged in user in context
// This helps in looking up to see if the user is logged in or if this is a valid session ID
context.setProperty( username, sessionid )
context.setProperty( sessionid, username )

requestContext.sessionid = sessionid
return "Successful Response"
</con:dispatchPath><con:response name="Successful Response" id="97b05616-f9f6-4445-97eb-6cf313cdae82" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:sessionId>${sessionid}</ns:sessionId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/></con:response><con:response name="Fault Login" id="97b05616-f9f6-4445-97eb-6cf313cdae82" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>${faultCode}</faultcode>
      <faultstring xml:lang="en-US">${faultShortDesc}</faultstring>
      <!--Optional:-->
      <faultactor>${faultCausedBy}</faultactor>
      <!--Optional:-->
      <detail>
        <ns:faultMessage>${faultDesc}</ns:faultMessage>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/></con:response><con:dispatchConfig xsi:type="con:MockOperationQueryMatchDispatch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:query><con:name>Successful response</con:name><con:query>declare namespace ns='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';

//ns:username</con:query><con:match>Sathya</con:match><con:response>Successful Response</con:response></con:query><con:query><con:name>Fault response</con:name><con:query>declare namespace ns='http://expertz.me/data/eCommerce/ShoppingService/1.0';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';

//*:username</con:query><con:match>?</con:match><con:response>Fault Login</con:response></con:query></con:dispatchConfig></con:mockOperation><con:mockOperation name="logout" id="adacd717-4df5-4650-b364-4eb8ee7f1c7b" interface="ShoppingServiceSoapBinding" operation="logout"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="562a9052-8454-4929-b459-e67e46fe8b7d" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:logoutResponse>
         <ns:logoutMessage>?</ns:logoutMessage>
      </ns:logoutResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="purchase" id="cda8564f-5e40-425a-83c0-0191fa065974" interface="ShoppingServiceSoapBinding" operation="purchase"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="1d35bcc7-daa3-4ff9-bc17-4a5bff72c2ea" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:purchaseResponse>
         <ns:purchaseStatus>
            <ns:id>?</ns:id>
            <ns:stockStatus>?</ns:stockStatus>
            <ns:expectedDelivery>?</ns:expectedDelivery>
         </ns:purchaseStatus>
      </ns:purchaseResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService><con:mockService port="8088" path="/mockShoppingService" host="chethan-PC" name="ShoppingServiceSoapBinding MockService" bindToHostOnly="false" docroot="" id="8f68e3c4-0b44-486e-b6aa-87b41ef4c4ec"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:mockOperation name="find" interface="ShoppingServiceSoapBinding" operation="find" id="d4dc0bd3-36a1-49ec-a0cd-f5df8224a022"><con:settings/><con:dispatchPath>// Util variables to access the xml data
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( mockRequest.requestContent )

// Get the session ID
def sessionid = holder.getNodeValue( "//*:sessionId" )

// check if its a valid session
if( !context.hasProperty( sessionid )){
	// If not a valid session ID, set the relevant fault message
	requestContext.faultCode = 'APP006'
	requestContext.faultShortDesc = 'Invalid Session'
	requestContext.faultCausedBy = 'Auth System'
	requestContext.faultDesc = 'Invalid Session ID. Session does not exist or has timed out.'
	return "Fault Find"
}

// Get the query string
def itemDesc = holder.getNodeValue( "//*:findString" )

// This is our item list. Feel free to add more items if you want...
def itemList = [ : ]
itemList["Android Tablet"] = [id:1, desc: "Android Tablet", price: "40 GBP" ,stockStatus: "100", expectedDelivery: "30-JUL-2012"]
itemList["iPad v1"] = [id:2, desc: "iPad v1", price: "540 GBP"  ,stockStatus: "50", expectedDelivery: "30-JUL-2012"]
itemList["iPad v2"] = [id:3, desc: "iPad v2", price: "800 GBP"  ,stockStatus: "10", expectedDelivery: "30-AUG-2012"]


//def itemList = context.getProperty("itemList")

// Check if we have an item with the same description as the search string
if(itemList.containsKey(itemDesc)){
	// Populate item details and send success message
	def item = itemList[itemDesc]
	requestContext.itemId = item.id
	requestContext.itemDescription = item.desc
	requestContext.itemPrice = item.price
	return "Successful Find"
}

// We couldn't find a particular item for the search. 
//In the demo we don't support generic queries. So send a fault message
requestContext.faultCode = 'APP007'
requestContext.faultShortDesc = 'Invalid Query'
requestContext.faultCausedBy = 'Search System'
requestContext.faultDesc = 'In the demo we do not support generic queries and we could not find any items with the given string!!!'
return "Fault Find"
</con:dispatchPath><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name="Successful Find" encoding="UTF-8" id="01c0c029-9a89-4cb8-b337-a98d20784da3" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:findResponse>
         <ns:item>
            <ns:id>${itemId}</ns:id>
            <ns:description>${itemDescription}</ns:description>
            <ns:price>${itemPrice}</ns:price>
         </ns:item>
      </ns:findResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find"/></con:response><con:response name="Fault Find" encoding="UTF-8" id="b5bb5e38-c637-42fe-aa69-90a95674f0e8" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>${faultCode}</faultcode>
      <faultstring xml:lang="en-US">${faultShortDesc}</faultstring>
      <!--Optional:-->
      <faultactor>${faultCausedBy}</faultactor>
      <!--Optional:-->
      <detail>
      ${faultDesc}
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/find"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="login" interface="ShoppingServiceSoapBinding" operation="login" id="d699990b-65b6-4c96-9c80-e196e284006b"><con:settings/><con:dispatchPath>// Initialize Util classes to retrieve XML value
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( mockRequest.requestContent )

// Get the username and Password values provided
def username = holder.getNodeValue( "//*:username" )
def password = holder.getNodeValue( "//*:password" )

// validate by checking that the User is not already logged in
// Username is of required length and Password doesn't end with 123!!!
if( context.hasProperty( username )  || username.length() > 10 || username.length() &lt; 3 || password.endsWith( "123" )){
	// If user is already loggged in, set different fault codes compared to others
	if(context.hasProperty( username )){
		requestContext.faultCode = 'APP001'
		requestContext.faultShortDesc = 'Already Logged In'
		requestContext.faultCausedBy = 'Auth System'
		requestContext.faultDesc = 'User is already logged in. If you want to login as another user logout first'
	}
	else{
		// Set relevant error code and desc. For the demo, we will keep it simple
		requestContext.faultCode = 'APP002'
		requestContext.faultShortDesc = 'Invalid Login Credentials'
		requestContext.faultCausedBy = 'Auth System'
		requestContext.faultDesc = 'Invalid Login Credentials. Please try again.'
	}
	// Specify which response to send back
	return "Fault Login"	
}

// Seems like a valid request, so generate session ID
// Note that we don't do password verification in the demo
def sessionid = String.valueOf( Math.random() ).substring( 2 )

// Set the user name and session ID as valid sessions and logged in user in context
// This helps in looking up to see if the user is logged in or if this is a valid session ID
context.setProperty( username, sessionid )
context.setProperty( sessionid, username )

requestContext.sessionid = sessionid
return "Successful Login"
</con:dispatchPath><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:defaultResponse>Successful Login</con:defaultResponse><con:response name="Successful Login" encoding="UTF-8" id="4d71ba24-2656-4d14-9020-2a1d1d277d76" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:sessionId>${sessionid}</ns:sessionId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/></con:response><con:response name="Fault Login" encoding="UTF-8" id="bedc6446-873e-4824-b8e1-37785402da42" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>${faultCode}</faultcode>
      <faultstring xml:lang="en-US">${faultShortDesc}</faultstring>
      <!--Optional:-->
      <faultactor>${faultCausedBy}</faultactor>
      <!--Optional:-->
      <detail>
        <ns:faultMessage>${faultDesc}</ns:faultMessage>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>
]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/login"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="logout" interface="ShoppingServiceSoapBinding" operation="logout" id="580960ee-8ea3-4ad8-b297-c4f2a8b9681f"><con:settings/><con:dispatchPath>// Util variables to access the xml data
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( mockRequest.requestContent )

// Get the session ID
def sessionid = holder.getNodeValue( "//*:sessionId" )

// check if its a valid session
if( !context.hasProperty( sessionid )){
	// If not a valid session ID, set the relevant fault message
	requestContext.faultCode = 'APP003'
	requestContext.faultShortDesc = 'Invalid Session'
	requestContext.faultCausedBy = 'Auth System'
	requestContext.faultDesc = 'Invalid Session ID. Session does not exist or has timed out.'
	return "Fault Logout"
}

// logout from the system by removing the relevant context
context.removeProperty( context.getProperty( sessionid ))
context.removeProperty( sessionid )
requestContext.logoutMessage = "Successfully logged out of the system."

return "Successful Logout"
</con:dispatchPath><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name="Successful Logout" encoding="UTF-8" id="f9794b32-887f-4d55-9b11-9913f5396a5f" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:logoutResponse>
         <ns:logoutMessage>${logoutMessage}</ns:logoutMessage>
      </ns:logoutResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/></con:response><con:response name="Fault Logout" encoding="UTF-8" id="82d5c7fe-7318-471c-b737-37bb72976a24" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>${faultCode}</faultcode>
      <faultstring xml:lang="en-US">${faultShortDesc}</faultstring>
      <!--Optional:-->
      <faultactor>${faultCausedBy}</faultactor>
      <!--Optional:-->
      <detail>
      ${faultDesc}
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/logout"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="purchase" interface="ShoppingServiceSoapBinding" operation="purchase" id="69be6f20-9c6e-41c5-a6af-96f37e25b4c0"><con:settings/><con:dispatchPath>// Util variables to access the xml data
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( mockRequest.requestContent )

// Get the session ID
def sessionid = holder.getNodeValue( "//*:sessionId" )

// check if its a valid session
if( !context.hasProperty( sessionid )){
	// If not a valid session ID, set the relevant fault message
	requestContext.faultCode = 'APP010'
	requestContext.faultShortDesc = 'Invalid Session'
	requestContext.faultCausedBy = 'Auth System'
	requestContext.faultDesc = 'Invalid Session ID. Session does not exist or has timed out.'
	return "Fault Find"
}

// Get the query string
def itemDesc = holder.getNodeValue( "//*:purchaseItem" )

// This is our item list. Feel free to add more items if you want...
def itemList = [ : ]
itemList["Android Tablet"] = [id:1, desc: "Android Tablet", price: "40 GBP" ,stockStatus: "100", expectedDelivery: "30-JUL-2012"]
itemList["iPad v1"] = [id:2, desc: "iPad v1", price: "540 GBP"  ,stockStatus: "50", expectedDelivery: "30-JUL-2012"]
itemList["iPad v2"] = [id:3, desc: "iPad v2", price: "800 GBP"  ,stockStatus: "10", expectedDelivery: "30-AUG-2012"]


//def itemList = context.getProperty("itemList")

// Check if we have an item with the same description as the search string
if(itemList.containsKey(itemDesc)){
	// Populate item details and send success message
	def item = itemList[itemDesc]
	requestContext.itemId = item.id
	requestContext.itemStockStatus = item.stockStatus
	requestContext.itemExpectedDelivery = item.expectedDelivery
	return "Successful Purchase"
}

// We couldn't find a particular item for the search. 
//In the demo we don't support generic queries. So send a fault message
requestContext.faultCode = 'APP011'
requestContext.faultShortDesc = 'Invalid Item'
requestContext.faultCausedBy = 'Purchase System'
requestContext.faultDesc = 'In the demo we do not support bulk buys or add to cart kind of operations. We could not find any items with the given name!!!'
return "Fault Purchase"
</con:dispatchPath><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name="Successful Purchase" encoding="UTF-8" id="3364e914-06fc-4d3c-b8c5-9bf8b265fae2" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://expertz.me/data/eCommerce/ShoppingService/1.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:purchaseResponse>
         <ns:purchaseStatus>
            <ns:id>${itemId}</ns:id>
            <ns:stockStatus>${itemStockStatus}</ns:stockStatus>
            <ns:expectedDelivery>${itemExpectedDelivery}</ns:expectedDelivery>
         </ns:purchaseStatus>
      </ns:purchaseResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/></con:response><con:response name="Fault Purchase" encoding="UTF-8" id="f71c3946-1819-420b-aabf-89f86a5dbc5c" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>${faultCode}</faultcode>
      <faultstring xml:lang="en-US">${faultShortDesc}</faultstring>
      <!--Optional:-->
      <faultactor>${faultCausedBy}</faultactor>
      <!--Optional:-->
      <detail>
      	${faultDesc}
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://expertz.me/service/eCommerce/ShoppingService/1.0/purchase"/></con:response><con:dispatchConfig/></con:mockOperation><con:startScript>/*
def itemList = [ : ]
itemList["Android Tablet"] = [id:1, desc: "Android Tablet", price: "40 GBP" ]
itemList["iPad v1"] = [id:2, desc: "iPad v1", price: "540 GBP" ]
itemList["iPad v2"] = [id:3, desc: "iPad v2", price: "800 GBP" ]

context.setProperty("itemList", itemList)
*/</con:startScript><con:properties/></con:mockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>